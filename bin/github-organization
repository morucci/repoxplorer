#!/usr/bin/env python

# Copyright 2016, Fabien Boucher
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import argparse
import sys
import yaml
import github3

parser = argparse.ArgumentParser(description='Read Github organization')
parser.add_argument(
    '--org', type=str,
    required=True,
    help='Specify the Github organization')
parser.add_argument(
    '--projects-file-path', type=str,
    help='projects.yaml file path to append organization repositories details')

args = parser.parse_args()

if __name__ == "__main__":
    anon = github3.GitHub()
    org = anon.organization(args.org)
    struct = {
        'projects': {args.org: []},
        'templates': [
            {"name": args.org,
             "branch": "master",
             "uri": "http://github.com/%s/%{name}s",
             "gitweb": "http://github.com/%s/%{name}s/commit/%%(sha)s"}
        ]}
    for r in org.iter_repos("source"):
        data = {"name": r.name,
                "template": args.org}
        struct['projects'][args.org].append(data)

    if not args.projects_file_path:
        with open('output.yml', 'w') as fd:
            fd.write(yaml.safe_dump(struct,
                                    default_flow_style=False))
        print "%s source repositories details" \
              " has been written to output.yaml" % (org.name)
        sys.exit(0)
    else:
        if os.path.isfile(args.projects_file_path):
            content = yaml.load(file(args.projects_file_path))
            content['projects'].update(struct['projects'])
            content['templates'].append(struct['templates'][0])
            with open(args.projects_file_path, 'w') as fd:
                fd.write(yaml.safe_dump(content,
                                        default_flow_style=False))
            sys.exit(0)
        else:
            print "%s has not been found on the FS" % args.project_file_path
            sys.exit(1)
