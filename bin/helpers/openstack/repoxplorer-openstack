#!/usr/bin/env python

# Copyright 2016, Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import sys
import copy
import argparse
import requests
import yaml

# This is a small tool to read the openstack governance projects.yaml
# and create a repoXplorer compatible projects.yaml file.

EXPLICIT_INCLUDE = []
# EXPLICIT_INCLUDE = ['keystone', 'swift']
SKIP = ['Packaging-deb']
GOVERNANCE_URI = ("https://raw.githubusercontent.com/openstack/governance/"
                  "master/reference/projects.yaml")

parser = argparse.ArgumentParser(
    description='Read/Index OpenStack Governance/project.yaml file')
parser.add_argument(
    '--output-path', type=str,
    help='yaml file path to register organization repositories details')

args = parser.parse_args()

if __name__ == "__main__":
    templates = {
        'openstack': {
            "branches": ["master", ],
            "uri": "https://github.com/%(name)s",
            "gitweb": "https://github.com/%(name)s/commit/%%(sha)s",
            "parsers": ['.*(blueprint) ([^ .]+).*']}
    }

    gp = yaml.safe_load(requests.get(GOVERNANCE_URI).text)

    projects = {}
    struct = {'projects': projects,
              'project-templates': templates}

    for name, details in gp.items():
        if name not in EXPLICIT_INCLUDE and len(EXPLICIT_INCLUDE) > 0:
            continue
        if name in SKIP:
            continue
        projects[name] = {}
        for _, detail in details['deliverables'].items():
            if 'repos' in detail:
                for repo in detail['repos']:
                    projects[name][repo] = {}
                    projects[name][repo]['template'] = "openstack"
                    projects[name][repo]['tags'] = copy.copy(
                        detail.get('tags', []))
                    projects[name][repo]['tags'].append("openstack")

    path = 'openstack.yaml'
    if args.output_path:
        path = os.path.join(os.path.expanduser(args.output_path), path)

    with open(path, 'w') as fd:
        fd.write(yaml.safe_dump(struct,
                                default_flow_style=False))
    print
    print ("OpenStack source repositories details"
           " has been written to %s" % path)

    print ("Please edit the yaml file if needed (like adding additional"
           "branches to index, defines custom releases, ...)")

    sys.exit(0)
