#!/usr/bin/env python

# Copyright 2016, Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import argparse
import yaml

# This is a small tool to read the openstack governance projects.yaml
# file https://github.com/openstack/governance/blob/master/
# reference/projects.yaml and create a repoXplorer compatible
# projects.yaml file.

EXPLICIT_INCLUDE = ('', )
# EXPLICIT_INCLUDE = ('keystone', 'swift')

parser = argparse.ArgumentParser(
    description='Read/Index Openstack Governance/project.yaml file')
parser.add_argument(
    '--projects-file-path', type=str,
    help='projects.yaml file path to write repositories details')
parser.add_argument(
    '--governance-file-path', type=str,
    help='Openstack projects.yaml file path')

args = parser.parse_args()

if __name__ == "__main__":
    gp = yaml.load(file(args.governance_file_path))
    out = {'projects': {},
           'templates': {}}

    for name, details in gp.items():
        if name not in EXPLICIT_INCLUDE:
            continue
        out['projects'][name] = []
        for _, detail in details['deliverables'].items():
            if 'repos' in detail:
                for repo in detail['repos']:
                    _out = {}
                    _out['name'] = repo
                    _out['tags'] = detail['tags']
                    _out['uri'] = "http://github.com/%s" % repo
                    _out['branch'] = "master"
                out['projects'][name].append(_out)
    if not args.projects_file_path:
        with open('output.yml', 'w') as fd:
            fd.write(yaml.safe_dump(out,
                                    default_flow_style=False))
    elif os.path.isfile(args.projects_file_path):
        content = yaml.load(file(args.projects_file_path))
        content['projects'].update(out['projects'])
        content['templates'].update(out['templates'])
        with open(args.projects_file_path, 'w') as fd:
            fd.write(yaml.safe_dump(content,
                                    default_flow_style=False))
    else:
        print "%s not found" % args.projects_file_path
