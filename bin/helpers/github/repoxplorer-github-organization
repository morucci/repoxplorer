#!/usr/bin/env python

# Copyright 2016, 2017 Fabien Boucher
# Copyright 2016, 2017 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import sys
import yaml
import github3

parser = argparse.ArgumentParser(description='Read Github organization')
parser.add_argument(
    '--org', type=str,
    required=True,
    help='Specify the Github organization')
parser.add_argument(
    '--output-path', type=str,
    help='yaml file path to register organization repositories details')
parser.add_argument(
    '--skip-fork', action='store_true',
    help='Do not consider forked repositories')

args = parser.parse_args()

if __name__ == "__main__":
    anon = github3.GitHub()
    org = anon.organization(args.org)
    templates = {
        args.org: {
            "branches": ["master", ],
            "uri": "http://github.com/%s/" % args.org +
                   "%(name)s",
            "gitweb": "http://github.com/%s/" % args.org +
                      "%(name)s/commit/%%(sha)s"}
    }
    projects = {args.org: {}}
    for r in org.iter_repos():
        if r.fork and args.skip_fork:
            print "Skip %s - it is a fork" % r.name
            continue
        data = {r.name: {"template": args.org}}
        projects[args.org].update(data)
        print "Found %s" % r.name

    struct = {'projects': projects,
              'project-templates': templates}

    path = '%s.yaml' % args.org
    if args.output_path:
        path = args.output_path

    with open('%s.yaml' % args.org, 'w') as fd:
        fd.write(yaml.safe_dump(struct,
                                default_flow_style=False))
    print
    print ("%s source repositories details"
           " has been written to %s.yaml" % (args.org, args.org))

    print ("Please edit the yaml file if needed (like adding additional"
           "branches to index, defines custom releases, ...)")

    sys.exit(0)
